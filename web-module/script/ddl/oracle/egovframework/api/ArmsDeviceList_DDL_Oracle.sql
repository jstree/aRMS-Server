CREATE TABLE T_ARMS_MONITOR_DEVICELIST_LOG
(
 C_ID        NUMBER                            NOT NULL,
 C_PARENTID  NUMBER                            NOT NULL,
 C_POSITION  NUMBER                            NOT NULL,
 C_LEFT      NUMBER                            NOT NULL,
 C_RIGHT     NUMBER                            NOT NULL,
 C_LEVEL     NUMBER                            NOT NULL,
 C_TITLE     VARCHAR2(4000 BYTE),
 C_TYPE      VARCHAR2(4000 BYTE),
 C_METHOD    VARCHAR2(4000 BYTE),
 C_STATE     VARCHAR2(4000 BYTE),
 C_DATE      DATE                              NOT NULL

);

COMMENT ON TABLE T_ARMS_MONITOR_DEVICELIST_LOG IS '기본 트리 스키마 트리거 로그';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_ID IS '노드 아이디';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_PARENTID IS '부모 노드 아이디';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_POSITION IS '노드 포지션';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_LEFT IS '노드 좌측 끝 포인트';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_RIGHT IS '노드 우측 끝 포인트';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_LEVEL IS '노드 DEPTH ';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_TITLE IS '노드 명';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_TYPE IS '노드 타입';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_METHOD IS '노드 변경 행위';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_STATE IS '노드 상태값 ( 이전인지. 이후인지)';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST_LOG.C_DATE IS '노드 변경 시';

CREATE TABLE T_ARMS_MONITOR_DEVICELIST
(
 C_ID        NUMBER                            NOT NULL,
 C_PARENTID  NUMBER                            NOT NULL,
 C_POSITION  NUMBER                            NOT NULL,
 C_LEFT      NUMBER                            NOT NULL,
 C_RIGHT     NUMBER                            NOT NULL,
 C_LEVEL     NUMBER                            NOT NULL,
 C_TITLE     VARCHAR2(4000 BYTE),
 C_TYPE      VARCHAR2(4000 BYTE),
 C_LINK      VARCHAR2(4000 BYTE),

 c_monitor_name             VARCHAR2(4000 BYTE),
 c_monitor_update_date      VARCHAR2(4000 BYTE),
 c_monitor_update_beatname  VARCHAR2(4000 BYTE),
 c_monitor_device_hostname  VARCHAR2(4000 BYTE),
 c_monitor_device_ip        VARCHAR2(4000 BYTE),

 c_monitor_url_filebeat     VARCHAR2(4000 BYTE),
 c_monitor_url_packetbeat   VARCHAR2(4000 BYTE),
 c_monitor_url_heartbeat    VARCHAR2(4000 BYTE),
 c_monitor_url_metricbeat   VARCHAR2(4000 BYTE),
 c_monitor_url_topbeat      VARCHAR2(4000 BYTE),
 c_monitor_url_apm          VARCHAR2(4000 BYTE),
 c_monitor_url_scouter      VARCHAR2(4000 BYTE),

 CONSTRAINT  T_ARMS_MONITOR_DEVICELISTU_PK PRIMARY KEY (C_ID)
);

COMMENT ON TABLE T_ARMS_MONITOR_DEVICELIST IS '기본 트리 스키마';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_ID IS '노드 아이디';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_PARENTID IS '부모 노드 아이디';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_POSITION IS '노드 포지션';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_LEFT IS '노드 좌측 끝 포인트';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_RIGHT IS '노드 우측 끝 포인트';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_LEVEL IS '노드 DEPTH ';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_TITLE IS '노드 명';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.C_TYPE IS '노드 타입';

COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_name IS '모니터링 이름';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_update_date IS '모니터링 최초 업데이트 날짜';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_update_beatname IS '모니터링 데이터 푸쉬 에이전트 이름';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_device_hostname IS '모니터링 데이터 푸쉬 호스트 이름';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_device_ip IS '모니터링 데이터 푸쉬 아이피 주소';

COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_filebeat IS '파일비트 로그 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_packetbeat IS '패킷비트 로그 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_heartbeat IS '하트비트 로그 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_metricbeat IS '메트릭비트 로그 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_topbeat IS '탑비트 로그 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_apm IS '성능 모니터링 접속 주소';
COMMENT ON COLUMN T_ARMS_MONITOR_DEVICELIST.c_monitor_url_scouter IS '스카우터 모니터링 접속 주소';


CREATE SEQUENCE S_ARMS_MONITOR_DEVICELIST
 START WITH 10
 MAXVALUE 999999999999999999999999999
 MINVALUE 0
 NOCYCLE
 CACHE 20
 NOORDER;


CREATE OR REPLACE TRIGGER "TG_ARMS_MONITOR_DEVICELIST"
BEFORE DELETE OR INSERT OR UPDATE
ON T_ARMS_MONITOR_DEVICELIST_LOG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpVar NUMBER;
BEGIN
  tmpVar := 0;
   IF UPDATING  THEN
       insert into T_ARMS_MONITOR_DEVICELIST_LOG
       values (:old.C_ID,:old.C_PARENTID,:old.C_POSITION,:old.C_LEFT,:old.C_RIGHT,:old.C_LEVEL,:old.C_TITLE,:old.C_TYPE,'update','변경이전데이터',sysdate);
       insert into T_ARMS_MONITOR_DEVICELIST_LOG
       values (:new.C_ID,:new.C_PARENTID,:new.C_POSITION,:new.C_LEFT,:new.C_RIGHT,:new.C_LEVEL,:new.C_TITLE,:new.C_TYPE,'update','변경이후데이터',sysdate);
    END IF;
   IF DELETING THEN
       insert into T_ARMS_MONITOR_DEVICELIST_LOG
       values (:old.C_ID,:old.C_PARENTID,:old.C_POSITION,:old.C_LEFT,:old.C_RIGHT,:old.C_LEVEL,:old.C_TITLE,:old.C_TYPE,'delete','삭제된데이터',sysdate);
   END IF;
   IF INSERTING  THEN
       insert into T_ARMS_MONITOR_DEVICELIST_LOG
       values (:new.C_ID,:new.C_PARENTID,:new.C_POSITION,:new.C_LEFT,:new.C_RIGHT,:new.C_LEVEL,:new.C_TITLE,:new.C_TYPE,'insert','삽입된데이터',sysdate);
   END IF;

  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
END TG_ARMS_MONITOR_DEVICELIST;