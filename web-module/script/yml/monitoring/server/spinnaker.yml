version: '3.6'

#sudo adduser spinnaker --disabled-password
#sudo usermod -aG sudo spinnaker

services:

  halyard:
    image: us-docker.pkg.dev/spinnaker-community/docker/halyard:0.41.0
    ports:
      - 8064:8064
    volumes:
      - halyardVolume:/home/spinnaker/.hal
    deploy: &default-deploy
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role!=manager]
    depends_on: &spinnaker-depend
      - redis
      - minio
    networks: &spinnaker-network
      - spinnakernetwork
    logging: &default-logging
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"

  clouddriver:
    image: us-docker.pkg.dev/spinnaker-community/docker/clouddriver:2.0.0-20180221152902
    ports:
      - 7002:7002
    extra_hosts: &addHost
      - "313.co.kr:192.168.25.42"
      - "db.313.co.kr:192.168.25.40"
      - "nas.313.co.kr:192.168.25.42"
      - "www.313.co.kr:192.168.25.46"
      - "ubuntu.313.co.kr:192.168.25.46"
    volumes: &configSpinnakerVolume
      - config-spinnaker-volume:/opt/spinnaker/config
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  deck:
    image: us-docker.pkg.dev/spinnaker-community/docker/deck:2.1.0-20180221143146
    ports:
      - 9000:9000
    extra_hosts: *addHost
    volumes:
      - config-spinnaker-volume:/opt/spinnaker/config
      - deck-html-volume:/opt/deck/html
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  igor:
    image: us-docker.pkg.dev/spinnaker-community/docker/igor:0.9.0-20180221133510
    ports:
      - 8088:8088
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  front50:
    image: us-docker.pkg.dev/spinnaker-community/docker/front50:0.9.0-20180221133510
    ports:
      - 8080:8080
    extra_hosts: *addHost
    environment:
      AWS_ACCESS_KEY_ID: "minio"
      AWS_SECRET_KEY: "miniostorage"
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  echo:
    image: us-docker.pkg.dev/spinnaker-community/docker/echo:0.8.0-20180221133510
    ports:
      - 8089:8089
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  orca:
    image: us-docker.pkg.dev/spinnaker-community/docker/orca:0.10.0-20180221133510
    ports:
      - 8083:8083
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  rosco:
    image: us-docker.pkg.dev/spinnaker-community/docker/rosco:0.5.0-20180221133510
    ports:
      - 8087:8087
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    networks: *spinnaker-network
    logging: *default-logging

  fiat:
    image: us-docker.pkg.dev/spinnaker-community/docker/fiat:0.5.0-20180221133510
    ports:
      - 7003:7003
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

  gate:
    image: us-docker.pkg.dev/spinnaker-community/docker/gate:0.10.0-20180221133510
    ports:
      - 8084:8084
    extra_hosts: *addHost
    volumes: *configSpinnakerVolume
    deploy: *default-deploy
    depends_on: *spinnaker-depend
    networks: *spinnaker-network
    logging: *default-logging

#  monitoring-daemon:
#    image: us-docker.pkg.dev/spinnaker-community/docker/monitoring-daemon:0.5.0-20180221133510
#    ports:
#      - 8008:8008
#    extra_hosts: *addHost
#    volumes: *configSpinnakerVolume
#    deploy: *default-deploy
#    depends_on: *spinnaker-depend
#    networks: *spinnaker-network
#    logging: *default-logging

  redis:
    image: redis:4.0.13
    command: redis-server --port 6379
    ports:
      - 6379:6379
    deploy: *default-deploy
    networks: *spinnaker-network
    logging: *default-logging

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8786:8081"
    deploy: *default-deploy
    networks: *spinnaker-network
    logging: *default-logging

  minio:
    image: minio/minio:RELEASE.2019-12-30T05-45-39Z
    command: server --config-dir /etc/minio --address ":62222" /data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniostorage
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=miniostorage
      - MINIO_REGION=us-east-1
    volumes:
      - minio-config-volume:/etc/minio
      - minio-data-volume:/data
    ports:
      - 62222:62222
    healthcheck:
      disable: true
    deploy: *default-deploy
    networks: *spinnaker-network
    logging: *default-logging

volumes:
  halyardVolume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/halyard"

  redisMasterVolume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/redis"

  config-spinnaker-volume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/config"

  deck-html-volume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/deck-html"

  minio-config-volume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/minio/config"

  minio-data-volume:
    driver: local
    driver_opts:
      type: "nfs"
      o: "addr=${NFSSERVER:-1.2.3.4},nolock,soft,rw,sync"
      device: ":${NFSPATH:-/nfspath}/spinnaker/minio/data"

networks:
  spinnakernetwork:
    attachable: true
